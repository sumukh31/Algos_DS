# Array Pair Sum
# Problem
# Given an integer array,
# output all the unique pairs that sum up to a specific value k.

# So the input:

# pair_sum([1,3,2,2],4)
# would return 2 pairs:
#   (1,3)
#   (2,2)

# NOTE: FOR TESTING PURPOSES CHANGE YOUR FUNCTION SO IT OUTPUTS THE NUMBER OF PAIRS

def pair_sum(arr,k):

    #Edge-case:
    if len(arr) < 2:
        return

    # create set data structures since element insertion in set is O(1)  
    seen = set()
    output = set()

    # iterate through the array once
    # if the target is not in the "seen" set, add number to the "seen" set.
    # if not, the number & target sum up to "k" value - add it to the output as a tuple
    for num in arr:
        target = k - num

        if target not in seen:
            seen.add(num)
        else:
            output.add((min(num,target), max(num,target)))
    #print ("output", output)
    return len(output)

# Test
print (pair_sum([1,3,2,2],4))
